name: Deploy to rumsrv

on:
  pull_request:
    branches: 
    - "master"
  workflow_dispatch:
    inputs:
      no_cleanup:
        description: Skip cleanup
        required: false
        default: true
        type: boolean
  
env:
  CARGO_TERM_COLOR: always
  
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Check that code can compile
        run: cargo check
  build:
    needs: check
    runs-on: [self-hosted, rumsrv]
    steps:
    - name: Set IMAGE_FULLNAME
      id: set_image_fullname
      run: |
        IMAGE_FULLNAME=${{ vars.IMAGE_BASENAME }}:$GITHUB_SHA
        echo "IMAGE_FULLNAME=$IMAGE_FULLNAME" >> $GITHUB_ENV
        echo "image_fullname=$IMAGE_FULLNAME" >> $GITHUB_OUTPUT
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build image
      run: docker build -t $IMAGE_FULLNAME .
    outputs:
      image_fullname: ${{ steps.set_image_fullname.outputs.image_fullname }}
  deploy:
    needs: build
    runs-on: [self-hosted, rumsrv]
    steps:
    - name: Stop old container
      run: docker rm -f ${{ vars.IMAGE_BASENAME }}
    - name: Run new container
      run: | 
        docker run \
          -d \
          -e TELOXIDE_TOKEN=${{ secrets.TELOXIDE_TOKEN }} \
          -e CHANNEL_ID=${{ vars.CHANNEL_ID }} \
          -e CHANNEL_CHAT_ID=${{ vars.CHANNEL_CHAT_ID }} \
          -e WORK_CHAT_ID=${{ vars.WORK_CHAT_ID }} \
          --name ${{ vars.IMAGE_BASENAME }} \
          ${{ needs.build.outputs.image_fullname }}
  cleanup:
    if: ${{ ! inputs.no_cleanup }}
    needs: deploy
    runs-on: [self-hosted, rumsrv]
    steps:
      - name: Cleanup docker containers
        run: docker container prune --filter "until=24h" -f
      - name: Cleanup docker images
        run: docker image prune --filter "until=24h" -af
      - name: cleanup docker build cache
        run: docker builder prune --filter "until=24h" -af
